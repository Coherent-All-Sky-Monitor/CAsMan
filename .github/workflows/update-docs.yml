name: Update Documentation

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'casman/**'
      - 'docs/generate_docs.py'
      - '.github/workflows/update-docs.yml'
  pull_request:
    branches: [ main ]
    paths:
      - 'casman/**'
      - 'docs/generate_docs.py'

permissions:
  contents: write
  pull-requests: write

jobs:
  update-docs:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e .
        pip install -e ".[dev]"

    - name: Generate documentation
      run: |
        cd docs
        python generate_docs.py
        cd ..

    - name: Update coverage info
      run: |
        python .github/scripts/update_coverage.py

    - name: Check for documentation changes
      id: check_changes
      run: |
        git add docs/
        git add README.md
        if git diff --staged --quiet; then
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit documentation updates
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "docs: Auto-update documentation and coverage info
        
        - Updated API documentation
        - Refreshed coverage statistics
        - Updated test count
        
        Generated by: docs/generate_docs.py
        Triggered by: ${{ github.event_name }} on ${{ github.ref_name }}"

    - name: Push changes
      if: steps.check_changes.outputs.changes == 'true' && github.event_name == 'push'
      uses: ad-m/github-push-action@master
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        branch: ${{ github.ref_name }}

    - name: Create Pull Request
      if: steps.check_changes.outputs.changes == 'true' && github.event_name == 'pull_request'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "docs: Auto-update documentation"
        title: "docs: Auto-update documentation"
        body: |
          ## Auto-generated Documentation Update
          
          This PR contains automatically generated documentation updates triggered by changes to the codebase.
          
          ### Changes included:
          - ðŸ“š Updated API documentation
          - ðŸ“Š Refreshed coverage statistics  
          - ðŸ§ª Updated test count
          
          Generated by: `docs/generate_docs.py`
          
          ### Files updated:
          - `docs/api_reference.md`
          - `docs/assembly.md`
          - `docs/parts.md` 
          - `docs/database.md`
          - `docs/visualization.md`
          - `docs/config.md`
          - `docs/cli.md`
          - `README.md` (coverage stats)
        branch: auto-update-docs
        delete-branch: true

    - name: Comment on PR (if no changes)
      if: steps.check_changes.outputs.changes == 'false' && github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: 'âœ… Documentation is up to date - no changes needed.'
          });
